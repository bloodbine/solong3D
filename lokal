void	draw_wall(t_cubdata *data, double y, double x, uint32_t color)
{
	int i = 0;
	int j = 0;
	
	// if (x < 0.0)
	// 	x = x * fmod(x);
	// if (y < 0.0)
	// 	y = y * fabs(y);
	while (j < (int)(fmod(y, 1) * 10))
	{
		while (i < (int)(fmod(x, 1) * 10))
		{
			mlx_put_pixel(data->image[1], i + (int)(x * 10), j + (int)(y * 10), color);
			i++;
		}
		i = 0;
		j++;
	}
}

void	ft_minimap(void *param)
{
	t_cubdata	*data;

	data = (t_cubdata *)param;
	int	x_start;
	int y_start;
	int	y = 0;
	int x = 0;
	
	x_start = (int)data->player->pos.x - 12;
	y_start = (int)data->player->pos.y - 12;
	ft_memset(data->image[1]->pixels, 0, data->image[1]->width * (data->image[1]->height) * sizeof(int32_t));
	while (y < 24)
	{
		if ((y_start + y >= 0) && (x_start + x >= 0) && (y_start + y < 24) && (x_start + x < 24) && worldmap[y_start + y][x_start + x])
			draw_wall(data, y - fmod(data->player->pos.y, 1), x - fmod(data->player->pos.x, 1), 0x00a0a0ff);
		else if ((y_start + y >= 0) && (x_start + x >= 0) && (y_start + y < 24) && (x_start + x < 24))
			draw_wall(data, y - fmod(data->player->pos.y, 1), x - fmod(data->player->pos.x, 1), 0xaff0f0ff);
		while (x < x_start + 24)
		{
			if ((y_start + y >= 0) && (x_start + x >= 0) && (y_start + y < 24) && (x_start + x < 24) && worldmap[y_start + y][x_start + x])
				draw_wall(data, y - fmod(data->player->pos.y, 1), x - fmod(data->player->pos.x, 1), 0x00a0a0ff);
			else if ((y_start + y >= 0) && (x_start + x >= 0) && (y_start + y < 24) && (x_start + x < 24))
				draw_wall(data, y - fmod(data->player->pos.y, 1), x - fmod(data->player->pos.x, 1), 0xafff0ff);
			x++;	
		}
		x = 0;
		y++;
	}
	draw_wall(data, 12, 12, 0xff8000ff);
}